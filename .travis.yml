# This file configures the build and run environment on https://travis-ci.org/

# Specify the operating systems on which to test for.
os:
  - linux

# For details on building a C++ project see: https://docs.travis-ci.com/user/languages/cpp/
language: cpp

# Specifiy which compiler or compilers to test against.
# For details, see https://docs.travis-ci.com/user/languages/cpp/#Choosing-compilers-to-test-against
compiler:
  - clang
  - gcc

# Specify explicitly which branches to build or not build
# For details see: https://docs.travis-ci.com/user/customizing-the-build/#Building-Specific-Branches
branches:
  only:
  - dev

# Specify which OS X image to use.
# "xcode8" is supposed to provide a macosx10.11 SK preinstalled.
# For details see: https://docs.travis-ci.com/user/osx-ci-environment/
osx_image: xcode8

xcode_project: Box2D/Build/xcode5/Box2D.xcodeproj
xcode_scheme: UnitTest

sudo: false

# https://cmake.org/files/v3.7/cmake-3.7.2-Linux-x86_64.tar.gz

# For white-listed aliases, see https://github.com/travis-ci/apt-source-whitelist/blob/master/ubuntu.json
addons:
  apt:
    sources:
      - deadsnakes
      - ubuntu-toolchain-r-test
      - george-edison55-precise-backports
      - llvm-toolchain-precise-3.7
    packages:
      - build-essential
      - cmake
      - cmake-data
      - clang-3.7
      - g++-6
      - gcc-6
      - xorg-dev
      - libXmu-dev
      - libXi-dev
      - libgl-dev
      - libosmesa-dev

install:
  - if [ "$CXX" = "g++" ]; then export CXX="g++-6" CC="gcc-6"; fi
  - if [ "$CXX" = "clang++" ]; then export CXX="clang++-3.7" CC="clang-3.7"; fi
  - export BOOST_INC_DST=/tmp/boost_1_63_0/include/boost BOOST_SRC=$HOME/boost-src
  - export GLFW_URL=https://github.com/glfw/glfw/releases/download/3.2.1/glfw-3.2.1.zip
  - export GLEW_URL=https://sourceforge.net/projects/glew/files/glew/2.0.0/glew-2.0.0.zip

# Linux seems to usually support "sha256sum". OS X meanwhile calls it "shasum".
script:
  - echo CXX=$CXX HOME=$HOME
  - $CXX -dM -E - < /dev/null | sort
  - git clone https://github.com/louis-langholtz/units.git
  - wget https://sourceforge.net/projects/boost/files/boost/1.63.0/boost_1_63_0.tar.bz2 -O /tmp/boost_1_63_0.tar.bz2
  - sha256sum /tmp/boost_1_63_0.tar.bz2 && echo "Expect SHA256 Hash of beae2529f759f6b3bf3f4969a19c2e9d6f0c503edcb2de4a61d1428519fcb3b0"
  - mkdir -p $BOOST_SRC $BOOST_INC_DST && pushd $BOOST_SRC && tar --bzip2 -xf /tmp/boost_1_63_0.tar.bz2 && cp -a boost_1_63_0/boost/* $BOOST_INC_DST && popd
  - pushd $BOOST_INC_DST && mv units units.old && ln -s $HOME/units/include/boost/units . && popd && ls -laF $BOOST_INC_DST
  - mkdir /tmp/glfw && pushd /tmp/glfw && curl --location --remote-name $GLFW_URL && unzip *.zip && rm *.zip && mkdir ../glfw-build && cd ../glfw-build && cmake ../glfw/* && make && popd
  - mkdir /tmp/glew && pushd /tmp/glew && curl --location --remote-name $GLEW_URL && unzip *.zip && rm *.zip && mkdir ../glew-build && cd ../glew-build && cmake ../glew/glew-*/build/cmake && make && popd
  - pushd /tmp &&
  - if [[ "$TRAVIS_OS_NAME" == "linux" && "$CXX" == "clang++-3.7" ]]; then (cd Box2D && mkdir -p BuildLinux && cd BuildLinux && cmake --version && cmake -DCMAKE_BUILD_TYPE=Release -DBOX2D_BUILD_UNIT_TESTS=ON -DBOX2D_BUILD_HELLOWORLD=ON .. && make && cd UnitTests && ./UnitTests --gtest_filter=-Dump.OneBodyWorld ); fi
  - if [[ "$TRAVIS_OS_NAME" == "linux" && "$CXX" == "g++-6" ]]; then (cd Box2D && mkdir -p BuildLinux && cd BuildLinux && cmake --version && cmake -DCMAKE_BUILD_TYPE=Debug -DBOX2D_BUILD_UNIT_TESTS=ON -DBOX2D_BUILD_HELLOWORLD=ON .. && make && cd UnitTests && ./UnitTests --gtest_filter=-Dump.OneBodyWorld:StackAllocator.slower_than_mallocfree ); fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then (cd Box2D && xcodebuild -project Box2D/Build/xcode5/Box2D.xcodeproj -list); fi
